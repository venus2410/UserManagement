@using _67RoleBaseSecurity.Models
@model _67RoleBaseSecurity.Models.UserViewModel
@{
    AjaxOptions options = new AjaxOptions()
    {
        Url = @Url.Action("Create", "Account"),
        HttpMethod = "post",
        OnSuccess = "success",
        OnFailure = "failure"
    };
    List<RoleViewModel> roles = ViewBag.Roles as List<RoleViewModel>;
}


@using (Ajax.BeginForm(options))
{
    <div id="createModal" class="modal fade" role="dialog">
        <div class="modal-dialog modal-lg">

            <!-- Modal content-->
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal">&times;</button>

                    <div class="row">
                        <div class="col-sm-6 text-center">
                            <h4 class="modal-title">Modal Header</h4>
                        </div>
                        <div class="col-sm-6">
                            <div class="TriSea-technologies-Switch pull-right">
                                <input id="TriSeaSuccess" name="TriSea1" type="checkbox" />
                                <label for="TriSeaSuccess" class="label-success"></label>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="modal-body">

                    @Html.AntiForgeryToken()
                    <div class="row">

                        <div class="col-sm-4">

                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            @Html.HiddenFor(model => model.UserId)


                            <div class="form-group">
                                @Html.LabelFor(model => model.UserName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.UserName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.HiringDate, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.HiringDate, new { htmlAttributes = new { @class = "form-control" } })

                                @Html.ValidationMessageFor(model => model.HiringDate, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.JobTitle, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.JobTitle, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.JobTitle, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-4">

                            <div class="form-group">
                                @Html.LabelFor(model => model.AliasName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.AliasName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.AliasName, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
                            </div>


                            <div class="form-group">
                                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.BirthDay, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.BirthDay, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.BirthDay, "", new { @class = "text-danger" })
                            </div>
                        </div>

                        <div class="col-sm-4">
                            <div class="form-group">
                                @Html.LabelFor(model => model.RoleId, htmlAttributes: new { @class = "control-label" })
                                @Html.ListBoxFor(model => model.RoleId, new MultiSelectList(roles, "RoleId", "RoleName"), new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.RoleId, "", new { @class = "text-danger" })
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Gender, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                            </div>

                            <div class="form-group">
                                @Html.LabelFor(model => model.IsActive, htmlAttributes: new { @class = "control-label" })
                                @Html.EditorFor(model => model.IsActive, new { htmlAttributes = new { @class = "form-control" } })
                                @Html.ValidationMessageFor(model => model.IsActive, "", new { @class = "text-danger" })
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <div class="row">
                            <div class="col-sm-6 text-center">
                                <input type="submit" value="Create" class="btn btn-default btn-warning" />
                            </div>
                            <div class="col-sm-6 text-center">
                                <button type="button" class="btn btn-default btn-danger" data-dismiss="modal">Close</button>
                            </div>
                        </div>
                    </div>

                </div>

            </div>

        </div>
    </div>
}